#Δυο ρακετες που ελενχωνται απο 2 παικτες με διαφορετικα κουμπια
Μια μπαλα που κινειται και αναπηδα
Οποιος χασει τη μπαλα χανει το παιχνιδι

from pygame import *

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, player_speed, width, height):
        super().__init__() #klironomoyme tis litoyrgies tis sprite.Sprite
        self.image = transform.scale(image.load(player_image),(width,height)) #Fortoni tin eikona kai allazi to megefos
        self.speed = player_speed
        self.rect = self.image.get_rect() #ορθογωνιο για τον χειρισμο θεσης και συγκρουσης
        self.rect.x = player_x
        self.rect.y = player_y
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y)) #εμφανιζει το sprite στο παραθυρο

#κλαση για τους παικτες με διαφορετικα κουμπια
class Player(GameSprite):
    def update_r(self): #για τον δεξι παικτη (πανω κατω με βελακια)
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < win_height - 80:
            self.rect.y += self.speed

    def update_l(self): #για τον αριστερο παικτη με (W,S)
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < win_height - 80:
            self.rect.y += self.speed

#Ρυθμησεις παιχνιδιου
back = (200,255,255) #χρωμα φοντου γαλαζιο
win_windth = 600
win_height = 500
window = display.set_mode((win_width,win_height)) #μεγεθος παραθυρου
window.fill(back)

#μεταβλητες ελενχουν παιχνιδια
game = True
finish = False 
clock = time.Clock()
FPS = 60 #ποσες φορες ανα δευτερολεπτο ανανεωνεται η οθονη 

#Δημιουργια ρακετας και μπαλας
racket1 = Player("racket.png", 30,200,4,50,150)
racket2 = Player("racket.png",520,200,4,50,150)
ball = GameSprite('tenis_ball.png',200,200,4,50,50)

#Μυνημα ηττας
font.init()
font = font.Font(None, 35)
lose1 = font.render("Player 1 LOSE!", True, (180,0,0))
lose2 = font.render("Player 2 LOSE!", True, (180,0,0))

#ταχυτητα μπαλας
speed_x = 3
speed_y = 3

#Κυριος βροχος παιχνιδιου
while game:
    for e in event.get():
        if e.type == QUIT:
            game = False #Τελος παιχνιδιου αν κλεισει το παραθυρο

    if not finish:
        window.fill(back)     #καθαριζει την οθονη
        racket1.update_l()    # Ενημερωνει αριστερα ρακετα
        racket2.update_r()    # Ενημερωνει δεξια ρακετα
        
        #kinisi mpalas
        ball.rect.x += speed_x
        ball.rect.y += speed_y

        # Αναπηδηση οταν η μπαλα χτυπησει ρακετες
        if sprite.collide_rect(racket1, ball) or sprite.collide_rect(racket2,ball):
            speed_x *= -1

        #Αναπηδηση απο πανω/κατω
        if ball.rect.y > win_height - 50 or ball.rect.y < 0:
            speed_y *= -1

        #αν η μπαλα περασει αριστερα , χανει ο παικτις 1
        if ball.rect.x < 0:
            finish = True
            window.blit(lose1,(200,200)) #Eμφανισει μηνυματος


        #αν η μπαλα περασει αριστερα , χανει ο παικτις 2
        if ball.rect.x > win_width:
            finish = True
            window.blit(lose2,(200,200)) #Eμφανισει μηνυματος

        #Επανασχεδιαση αντικειμενων
        racket1.reset()
        racket2.reset()
        ball.reset()

    display.update() #ανανεωση οθονης
    clock.tick(FPS) #καθυστεριση για σταθερα FPS








